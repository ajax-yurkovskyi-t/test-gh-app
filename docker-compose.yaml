services:
  mongo:
    image: mongo:7.0.14
    container_name: mongo-container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - db-data:/data/db
    profiles: [ dev ]

  app:
    image: iot-management-device
    container_name: iot-management-device
    build:
      context: iot-management-device
      dockerfile: Dockerfile-iot
    env_file:
      - .env
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    profiles: [ dev ]

  gateway:
    image: gateway
    container_name: gateway
    build:
      context: gateway
      dockerfile: Dockerfile-gateway
    env_file:
      - .env
    ports:
      - "8080:8080"
    profiles: [ dev ]

  nats:
    container_name: nats-server
    image: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    profiles: [ dev, test ]

  kafka:
    image: confluentinc/confluent-local:7.4.1
    hostname: kafka
    container_name: kafka
    ports:
      - "8082:8082"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
    profiles: [ dev, test ]

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 9999:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    profiles: [ dev ]

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    profiles: [ dev, test ]

volumes:
  db-data:
